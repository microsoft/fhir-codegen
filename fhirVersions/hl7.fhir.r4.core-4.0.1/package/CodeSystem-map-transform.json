{"resourceType":"CodeSystem","id":"map-transform","meta":{"lastUpdated":"2019-11-01T09:29:23.356+11:00"},"extension":[{"url":"http://hl7.org/fhir/StructureDefinition/structuredefinition-wg","valueCode":"fhir"},{"url":"http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status","valueCode":"trial-use"},{"url":"http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm","valueInteger":2}],"url":"http://hl7.org/fhir/map-transform","identifier":[{"system":"urn:ietf:rfc:3986","value":"urn:oid:2.16.840.1.113883.4.642.4.682"}],"version":"4.0.1","name":"StructureMapTransform","title":"StructureMapTransform","status":"draft","experimental":false,"date":"2019-11-01T09:29:23+11:00","publisher":"HL7 (FHIR Project)","contact":[{"telecom":[{"system":"url","value":"http://hl7.org/fhir"},{"system":"email","value":"fhir@lists.hl7.org"}]}],"description":"How data is copied/created.","caseSensitive":true,"valueSet":"http://hl7.org/fhir/ValueSet/map-transform","content":"complete","concept":[{"code":"create","display":"create","definition":"create(type : string) - type is passed through to the application on the standard API, and must be known by it."},{"code":"copy","display":"copy","definition":"copy(source)."},{"code":"truncate","display":"truncate","definition":"truncate(source, length) - source must be stringy type."},{"code":"escape","display":"escape","definition":"escape(source, fmt1, fmt2) - change source from one kind of escaping to another (plain, java, xml, json). note that this is for when the string itself is escaped."},{"code":"cast","display":"cast","definition":"cast(source, type?) - case source from one type to another. target type can be left as implicit if there is one and only one target type known."},{"code":"append","display":"append","definition":"append(source...) - source is element or string."},{"code":"translate","display":"translate","definition":"translate(source, uri_of_map) - use the translate operation."},{"code":"reference","display":"reference","definition":"reference(source : object) - return a string that references the provided tree properly."},{"code":"dateOp","display":"dateOp","definition":"Perform a date operation. *Parameters to be documented*."},{"code":"uuid","display":"uuid","definition":"Generate a random UUID (in lowercase). No Parameters."},{"code":"pointer","display":"pointer","definition":"Return the appropriate string to put in a reference that refers to the resource provided as a parameter."},{"code":"evaluate","display":"evaluate","definition":"Execute the supplied FHIRPath expression and use the value returned by that."},{"code":"cc","display":"cc","definition":"Create a CodeableConcept. Parameters = (text) or (system. Code[, display])."},{"code":"c","display":"c","definition":"Create a Coding. Parameters = (system. Code[, display])."},{"code":"qty","display":"qty","definition":"Create a quantity. Parameters = (text) or (value, unit, [system, code]) where text is the natural representation e.g. [comparator]value[space]unit."},{"code":"id","display":"id","definition":"Create an identifier. Parameters = (system, value[, type]) where type is a code from the identifier type value set."},{"code":"cp","display":"cp","definition":"Create a contact details. Parameters = (value) or (system, value). If no system is provided, the system should be inferred from the content of the value."}]}